package red.bofan.dao;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.springframework.stereotype.Component;
import red.bofan.model.Cipher;

import java.util.List;

@Component
public interface CipherMapper {

    List<Cipher> getAll();
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cipher
     *
     * @mbggenerated
     */
    @Delete({
        "delete from cipher",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cipher
     *
     * @mbggenerated
     */
    @Insert({
        "insert into cipher (id, title, ",
        "user_id, publish_time, ",
        "answer, fhint, shint, ",
        "thint, content)",
        "values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, ",
        "#{userId,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, ",
        "#{answer,jdbcType=VARCHAR}, #{fhint,jdbcType=VARCHAR}, #{shint,jdbcType=VARCHAR}, ",
        "#{thint,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})"
    })
    int insert(Cipher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cipher
     *
     * @mbggenerated
     */
    int insertSelective(Cipher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cipher
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, title, user_id, publish_time, answer, fhint, shint, thint, content",
        "from cipher",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @ResultMap("ResultMapWithBLOBs")
    Cipher selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cipher
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Cipher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cipher
     *
     * @mbggenerated
     */
    @Update({
        "update cipher",
        "set title = #{title,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "publish_time = #{publishTime,jdbcType=TIMESTAMP},",
          "answer = #{answer,jdbcType=VARCHAR},",
          "fhint = #{fhint,jdbcType=VARCHAR},",
          "shint = #{shint,jdbcType=VARCHAR},",
          "thint = #{thint,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(Cipher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cipher
     *
     * @mbggenerated
     */
    @Update({
        "update cipher",
        "set title = #{title,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "publish_time = #{publishTime,jdbcType=TIMESTAMP},",
          "answer = #{answer,jdbcType=VARCHAR},",
          "fhint = #{fhint,jdbcType=VARCHAR},",
          "shint = #{shint,jdbcType=VARCHAR},",
          "thint = #{thint,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Cipher record);
}