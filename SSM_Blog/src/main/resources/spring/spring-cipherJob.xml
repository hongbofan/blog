<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- 这个类用来做需要完成的业务-->
    <bean id="doAutoPush" class="com.funo.cms.web.controller.DoAutoPush"></bean>
    <!-- 定时任务 -->
    <!-- 定义调用对象和调用对象的方法，这个配置和普通的一样的 -->
    <bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 调用的类  -->
        <property name="targetObject">
            <ref bean="doAutoPush" />
        </property>
        <!-- 调用类中的方法  -->
        <property name="targetMethod">
            <value>autoPush</value>
        </property>
        <property  name ="concurrent"  value ="false"   />
    </bean>
    <!-- 定义触发时间 ，这边就不同了，这里必须将时间设置成无限长，因为我们要去读取数据库的时间来做为定时器的触发时间-->
    <bean id="cronTrigger1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="jobtask" />
        </property>
        <!-- cron表达式  -->
        <property name="cronExpression">
            <!-- cron将时间设置成无限长  -->
            <value>1 0 0 1 1 ? 2099</value>
        </property>
    </bean>
    <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
    <bean id="startQuertz" lazy-init="true" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>
    </bean>
    <!--这个类是方法的实现类-->
    <bean id="pushService" class="com.funo.cms.service.impl.ArticlePushServiceImpl"></bean>
    <!--这里就是这里，就这个配置搞了我一天，这个类是用来设置触发时间的，调用这个类的init的方法来进行对时间的配置-->
    <bean id="pushServiceImpl" class="com.funo.cms.web.controller.DoAutoPushServiceImpl" lazy-init="false" init-method="init">
        <!--这个对象一定要注入，这样类才能进行管理，还有在类型要用get set方法，不然会报错。-->
        <property name="scheduler" ref="startQuertz" />
        <property name="pushService" ref="pushService" />
    </bean>
</beans>